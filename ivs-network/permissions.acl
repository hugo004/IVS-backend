/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample access control list.
 */
// rule EverybodyCanReadEverything {
//     description: "Allow all participants read access to all resources"
//     participant: "org.example.ivsnetwork.User"
//     operation: READ
//     resource: "org.example.ivsnetwork.*"
//     action: ALLOW
// }

rule EverybodyCanSubmitTransactions {
  description: "Allow all participants to submit transactions"
  participant: "org.example.ivsnetwork.*"
  operation: CREATE, UPDATE
  resource: "org.example.ivsnetwork.*"
  action: ALLOW
}

// rule EveryBodyCanReadUserProfile {
//   description: "Allow all participants to read user's profile"
//   participant: "org.example.ivsnetwork.User"
//   operation: READ
//   resource: "org.example.ivsnetwork.User"
//   action: ALLOW
// }


// rule OwnerHasFullAccessToTheirAssets {
//     description: "Allow all participants full access to their assets"
//     participant(p): "ivsnetwork.User"
//     operation: ALL
//     resource(r): "ivsnetwork.SampleAsset"
//     condition: (r.owner.getIdentifier() === p.getIdentifier())
//     action: ALLOW
// }

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule OnlyRecordOwnerFullControll {
  description: "User have full controll on own record"
  participant(p): "org.example.ivsnetwork.User"
  operation: ALL
  resource(r): "org.example.ivsnetwork.*"
  condition: (r.owner == p.getIdentifier())
  action: ALLOW
}

rule OnlyProfileOwnerFullControll {
  description: "User havel full controll on own profile"
  participant(p): "org.example.ivsnetwork.User"
  operation: ALL
  resource(r): "org.example.ivsnetwork.User"
  condition: (r.userId == p.getIdentifier())
  action: ALLOW
}

rule AllowAuthorizedUserAccess {
  description: "Authorized user can access record"
  participant(p): "org.example.ivsnetwork.User"
  operation: READ
  resource(r): "org.example.ivsnetwork.*"
  condition: (r.authorized && r.authorized.indexOf(p.getIdentifier()) > -1)
  action: ALLOW
}

//request asset rule control
rule SenderAndReceiverCanAccessRequest {
  description: "The request sender and receiver can access request record"
  participant(p): "org.example.ivsnetwork.User"
  operation: READ, UPDATE
  resource(r): "org.example.ivsnetwork.Request"
  condition: (r.senderId == p.getIdentifier() || r.receiverId == p.getIdentifier())
  action: ALLOW
}


rule ChannelMemberCanAccessOwnChannel{
  description: "A channel member can access their own channel"
  participant(p): "org.example.ivsnetwork.User"
  operation: ALL
  resource(r): "org.example.ivsnetwork.*"
  condition: (p.channels && p.channels.indexOf(r.getIdentifier()) > -1)
  action: ALLOW
}

rule ChannelMemberCanShareAsset {
  description: "A channel member can access the asset in the channel"
  participant(p): "org.example.ivsnetwork.User"
  operation: ALL
  resource(r): "org.example.ivsnetwork.*"
  condition: (p.channels && p.channels.indexOf(r.owner) > -1)
  action: ALLOW
}


rule OwnerCanReadHistorian {
  description:  "Owner can see history transaction"
  participant(p): "org.hyperledger.composer.system.Participant"
  operation: READ
  resource(r): "org.hyperledger.composer.system.HistorianRecord"
  condition: (r.participantInvoking.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

// prevent users from seeing historian records
rule hidehistorianAccess{
  description: "Deny access to Historian"
  participant: "org.hyperledger.composer.system.Participant"
  operation: READ
  resource: "org.hyperledger.composer.system.HistorianRecord"
  action: DENY
}