
namespace org.example.ivsnetwork


// system users
concept BaseInfo {
  o String userName
  o String password
  o String firstName
  o String lastName
  o String email
  o String phone optional
}


enum AccountType {
  o User
  o Verifier
}

abstract participant BaseUser identified by userId {
  o String userId
  o AccountType accountType default = 'User'

}

participant User extends BaseUser {
  o BaseInfo baseInfo
  o String[] authorized optional
  o String[] channels optional
  o String[] educations optional
  o String[] workExps optional
  o String[] volunteerRecord optional
  o String[] records optional
}

transaction CreateUser {
  o BaseInfo baseInfo
}


//channel group define
participant Channel identified by channelId {
  o String channelId
  o String name
  o String owner
  o String ownerId
  o DateTime createTime
  o String[] members optional
  o String[] records optional
}

transaction CreateChannel {
  o String owner
  o String ownerId
  o String name
  o String[] members
}
transaction InviteChannelMember {
  o String channelId
  o String[] users
}

transaction RemoveChannelMember {
  o String channelId
  o String[] users
}

transaction SendChannelInvitation {
  o String channelId
  o String senderName
  o String[] members
  o String remarks optional
}

enum VerifierType {
  o Education
  o WorkExp
  o Volunteer
  o Other
}
participant Verifier identified by vid {
  o String vid
  o String userName
  o String password
  o String name
  o AccountType accountType default = 'Verifier'
  o VerifierType type
}

transaction VerifyRecord {
  o String recordId
  o Boolean isVerify
}



// CV records
concept DateRange {
  o DateTime from
  o DateTime to
}

abstract asset BaseAsset identified by  assetId {
  o String name
  o String assetId
  o String owner
  o String[] authorized optional
  o Boolean isVerify default = false
}


asset Record extends BaseAsset {
  o DateTime createTime
  o String fileType
  o String encrypted
  o VerifierType recordType default = 'Other'
}

transaction CreateRecord {
  o String name
  o String fileType
  o String encrypted
  o VerifierType recordType
}

transaction GetAssetById {
  o String id
  o String assetName
}


//request access user asset control
enum StatusType {
  o ACCEPT
  o DENY
  o UNDETERMINED
  o REVOKED
  o GRANT
  o OTHER
  o ALL
}

enum RequestType {
  o ASSET
  o CHANNEL
}

asset Request identified by requestId {
  o String assetName
  o String requestName
  o String requestId

  o String receiverName
  o String receiverId

  o String senderId
  o String senderName

  o DateTime createTime
  o StatusType status default='UNDETERMINED'
  o RequestType requestType default='ASSET'
  o String[] requested optional //should store the asset identifier no just id
  o String remarks optional
  o DateTime expireTime optional
}

abstract transaction RequestTransaction {
  o String receiverId
  o String receiverName
  o String eventName
  o StatusType status default='UNDETERMINED'
}

transaction RequestAccessAsset extends RequestTransaction {
  o String remarks optional
  o String assetName
  o String [] assetId
}


transaction  UpdateRequestStatus {
  o String requestId
  o StatusType newStatus 
}

//access control

abstract transaction AuthorizeTransaction {
  o String userId
  o DateTime expireTime optional
}

abstract transaction AuthorizeAssetTransaction extends AuthorizeTransaction {
  o String assetId
  o String assetName
}

abstract transaction AuthorizeAllAssetTransaction extends AuthorizeTransaction {
  o String assetName
  o String[] assetId optional
}

// authorize, revoke access user's all asset
transaction AuthorizeAccessAll extends AuthorizeTransaction{  
}

transaction RevokeAccessAll extends AuthorizeTransaction {
}

//authorize, revoke access of user's specify asset record
transaction AuthorizeAccessSpecifyRecord extends AuthorizeAllAssetTransaction{
}

transaction RevokeAccessSpecifyRecord extends AuthorizeAllAssetTransaction{
}

//authorize, revoke access user's profile 
transaction AuthorizeAccessProfile extends AuthorizeTransaction{
}

transaction RevokeAccessProfile extends AuthorizeTransaction {
}

//authorize, revoke access user's specify asset
transaction AuthorizeAccessAsset extends AuthorizeAssetTransaction {
}

transaction RevokeAccessAsset extends AuthorizeAssetTransaction {
}

event AuthorizeAccessEvent {
  o String sender
  o String receiver
  o String[] assetName
  o String[] assetId

}



